typedef unsigned long size_t;
typedef long int off_t;
struct stat;
struct sysinfo;

// system calls
int fork(void);
int exit(int) __attribute__((noreturn));
int wait(int*);
int pipe(int*);
int write(int, const void*, int);
int read(int, void*, int);
int close(int);
int kill(int);
int exec(const char*, char**);
int open(const char*, int);
int mknod(const char*, short, short);
int unlink(const char*);
int fstat(int fd, struct stat*);
int link(const char*, const char*);
int mkdir(const char*);
int chdir(const char*);
int dup(int);
int getpid(void);
char* sbrk(int);
char* sbrknaive(int);
int sleep(int);
int uptime(void);
int pgaccess(void *base, int len, void *mask);
// usyscall region
int ugetpid(void);
void *mmap(void *addr, size_t len, int prot, int flags,
           int fd, off_t offset);
int munmap(void *addr, size_t len);
void svprint(void);
int trace(int);
int sysinfo(struct sysinfo*);
int dirtypages(void);
int vmprint(int);
int sigalarm(int , void (*handler)());
int sigreturn(void);
int testbacktrace(void);
int clone(void(*)(void*, void*), void *, void *, void *);
int join(void **);
int connect(uint32, uint16, uint16, uint8, uint8);
int recvfrom(int, void*, int, uint32 *, uint16 *);
int sendto(int, const void*, int, uint32, uint16);
int accept(int);
int symlink(const char*, const char*);
int sigsend(int, int);
int signal(int, uint64);
int sigprocmask(int);

// ulib.c
int stat(const char*, struct stat*);
char* strcpy(char*, const char*);
int strncmp(const char *p, const char *q, uint n);
char* strncpy(char *, const char *, int);
void *memmove(void*, const void*, int);
char* strchr(const char*, char c);
char* strrchr(const char*, char c);
int strcmp(const char*, const char*);
void fprintf(int, const char*, ...);
void printf(const char*, ...);
char* gets(char*, int max);
uint strlen(const char*);
void* memset(void*, int, uint);
void* malloc(uint);
void* malloc_align(uint);
void free(void*);
int atoi(const char*);
int memcmp(const void *, const void *, uint);
void *memcpy(void *, const void *, uint);
int thread_create(void (*)(void *, void *), void *, void *);
int thread_join();
void lock_init(lock_t *);
void lock_acquire(lock_t *);
void lock_release(lock_t *);
int statistics(void*, int);
uint32 gethostbyname(char *);
int parseURL(const char *, char *, char *, int, int);
